using System;
using System.CommandLine;
using System.CommandLine.Invocation;
using System.Threading.Tasks;
using CliApp;
namespace CliDefinition
{
   
   public class NextGenerationApp : AppBase
   {
      private NextGenerationCli rootCommand
      public NextGeneration RootCommand
      {
         get
         {
            return rootCommand;
         }
      }
      public NextGeneration CreateWithRootCommand(Delegate codeToRun)
      {
         return new NextGeneration();
      }
   }
   
   public class NextGenerationCli : ICommandHandler
   {
      public Command Command {get; set;}
      public NextGenerationCli()
      {
         Command = new Command("NextGeneration");
         picardOption = new Option<string>("picard");
         Command.Add(picardOption);
         Command.Handler = this;
      }
      public Option<string> picardOption {get; set;}
      public string picardOptionResult(InvocationContext context)
      {
         return context.ParseResult.GetValueForOption<SimpleNamedItem "string">(picardOption);
      }
      public Task<int> InvokeAsync()
      {
         NextGeneration(picardOptionResult(context));
         return Task.FromResult(context.ExitCode);
      }
   }
}
