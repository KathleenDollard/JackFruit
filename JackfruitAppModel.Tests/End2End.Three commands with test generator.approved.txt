using System;
using System.CommandLine;
using System.CommandLine.Invocation;
using System.Threading.Tasks;
namespace CliDefinition
{
   
   public class dotnetCli
   {
      public Command Command {get; set;}
      public dotnetCli()
      {
         Command = new Command("dotnet");
         projectOption = new Option<string>("project");
         Command.Add(projectOption);
         Command.SetHandler(DotnetHandlers.Dotnet, projectOption);
      }
      public Option<string> projectOption {get; set;}
   }
   
   public class addCli
   {
      public Command Command {get; set;}
      public addCli()
      {
         Command = new Command("add");
         Command.SetHandler();
      }
   }
   
   public class packageCli
   {
      public Command Command {get; set;}
      public packageCli()
      {
         Command = new Command("package");
         packageNameOption = new Option<string>("packageName");
         Command.Add(packageNameOption);
         versionOption = new Option<string>("version");
         Command.Add(versionOption);
         frameworkOption = new Option<string>("framework");
         Command.Add(frameworkOption);
         noRestoreOption = new Option<bool>("noRestore");
         Command.Add(noRestoreOption);
         sourceOption = new Option<string>("source");
         Command.Add(sourceOption);
         packageDirectoryOption = new Option<string>("packageDirectory");
         Command.Add(packageDirectoryOption);
         interactiveOption = new Option<bool>("interactive");
         Command.Add(interactiveOption);
         prereleaseOption = new Option<bool>("prerelease");
         Command.Add(prereleaseOption);
         Command.SetHandler(DotnetHandlers.AddPackage, packageNameOption, versionOption, frameworkOption, noRestoreOption, sourceOption, packageDirectoryOption, interactiveOption, prereleaseOption);
      }
      public Option<string> packageNameOption {get; set;}
      public Option<string> versionOption {get; set;}
      public Option<string> frameworkOption {get; set;}
      public Option<bool> noRestoreOption {get; set;}
      public Option<string> sourceOption {get; set;}
      public Option<string> packageDirectoryOption {get; set;}
      public Option<bool> interactiveOption {get; set;}
      public Option<bool> prereleaseOption {get; set;}
   }
}
